name: Law assist frontend production CI

on:
  push:
    branches: [ "main", "master" ]

jobs:

  docker-build-push:

    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Login Docker Hub
      uses: docker/login-action@v3.4.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v3.10.0
      id: buildx

    - name: Cache Docker image layers
      uses: actions/cache@v4.2.3
      with:
        path: ${{ runner.temp }}/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
          
    - name: Build and push Docker images
      uses: docker/build-push-action@v6.15.0
      id: docker_build
      with:
        platforms: linux/amd64,linux/arm64
        context: ./
        file: ./.github/workflows/Dockerfile
        push: true
        build-args: |
          NEXTAUTH_URL=${{ vars.NEXTAUTH_URL_PROD }}
          NEXT_SERVER_API_HOST=${{ vars.NEXT_SERVER_API_HOST }}
          NEXT_PUBLIC_API_HOST=${{ vars.NEXT_PUBLIC_API_HOST_PROD }}
          API_HOST=${{ vars.NEXT_PUBLIC_API_HOST_PROD }}
          BACKEND_API_HOST=${{ vars.NEXT_PUBLIC_API_HOST_PROD }}
          REMOTE_PROTOCOL=${{ vars.REMOTE_PROTOCOL }}
          REMOTE_HOSTNAME=${{ vars.REMOTE_HOSTNAME }}
          REMOTE_PHOTO_MOCK_DATA=${{ vars.REMOTE_PHOTO_MOCK_DATA }}
          NODE_TLS_REJECT_UNAUTHORIZED=${{ vars.NODE_TLS_REJECT_UNAUTHORIZED }}
        secrets: |  
          "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}"
        tags: ${{ secrets.DOCKER_USERNAME }}/frontend:prod-latest
        cache-to: type=local,dest=${{ runner.temp }}/.buildx-cache
        cache-from: type=local,src=${{ runner.temp }}/.buildx-cache

    - name: Verify CI/CD pipeline
      run: echo ${{ steps.docker_build.outputs.digest }}

    - name: Move cache
      run: |
        rm -rf ${{ runner.temp }}/.buildx-cache
        mv ${{ runner.temp }}/.buildx-cache-new ${{ runner.temp }}/.buildx-cache
